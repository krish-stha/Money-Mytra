"""
This type stub file was generated by pyright.
"""

from typing import AbstractSet, Sequence
from google.generativeai.notebook import ipython_env, model_registry, parsed_args_lib, post_process_utils
from google.generativeai.notebook.lib import llm_function

"""Utilities for Commands.

Common methods for Commands such as RunCommand and CompileCommand.
"""
class _GroundTruthLLMFunction(llm_function.LLMFunction):
    """LLMFunction that returns pre-generated ground truth data."""
    def __init__(self, data: Sequence[str]) -> None:
        ...
    
    def get_placeholders(self) -> AbstractSet[str]:
        ...
    


def create_llm_function(models: model_registry.ModelRegistry, env: ipython_env.IPythonEnv | None, parsed_args: parsed_args_lib.ParsedArgs, cell_content: str, post_processing_fns: Sequence[post_process_utils.ParsedPostProcessExpr]) -> llm_function.LLMFunction:
    """Creates an LLMFunction from Command.execute() arguments."""
    ...

def create_llm_compare_function(env: ipython_env.IPythonEnv | None, parsed_args: parsed_args_lib.ParsedArgs, post_processing_fns: Sequence[post_process_utils.ParsedPostProcessExpr]) -> llm_function.LLMFunction:
    """Creates an LLMCompareFunction from Command.execute() arguments."""
    ...

def create_llm_eval_function(models: model_registry.ModelRegistry, env: ipython_env.IPythonEnv | None, parsed_args: parsed_args_lib.ParsedArgs, cell_content: str, post_processing_fns: Sequence[post_process_utils.ParsedPostProcessExpr]) -> llm_function.LLMFunction:
    """Creates an LLMCompareFunction from Command.execute() arguments."""
    ...

