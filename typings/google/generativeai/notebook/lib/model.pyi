"""
This type stub file was generated by pyright.
"""

import abc
import dataclasses
from typing import Sequence

"""Abstract interface for models."""
@dataclasses.dataclass(frozen=True)
class ModelArguments:
    """Common arguments for models.

    Attributes:
      model: The model string to use. If None a default model will be selected.
      temperature: The temperature. Must be greater-than-or-equal-to zero.
      candidate_count: Number of candidates to return.
    """
    model: str | None = ...
    temperature: float | None = ...
    candidate_count: int | None = ...


@dataclasses.dataclass
class ModelResults:
    """Results from calling AbstractModel.call_model()."""
    model_input: str
    text_results: Sequence[str]
    ...


class AbstractModel(abc.ABC):
    @abc.abstractmethod
    def call_model(self, model_input: str, model_args: ModelArguments | None = ...) -> ModelResults:
        """Executes the model."""
        ...
    


class EchoModel(AbstractModel):
    """Model that returns the original input.

    This is primarily used for testing.
    """
    def call_model(self, model_input: str, model_args: ModelArguments | None = ...) -> ModelResults:
        ...
    


