"""
This type stub file was generated by pyright.
"""

import abc
from typing import Any, Callable, Mapping, Sequence
from google.auth import credentials
from google.generativeai.notebook import ipython_env, sheets_id

"""Module that holds a global gspread.client.Client."""
_gspread_import_error: Exception | None = ...
GSpreadException = ...
class SpreadsheetNotFoundError(RuntimeError):
    ...


class GSpreadClient(abc.ABC):
    """Wrapper around gspread.client.Client.

    This adds a layer of indirection for us to inject mocks for testing.
    """
    @abc.abstractmethod
    def validate(self, sid: sheets_id.SheetsIdentifier) -> None:
        """Validates that `name` is the name of a Google Sheets document.

        Raises an exception if false.

        Args:
          sid: The identifier for the document.
        """
        ...
    
    @abc.abstractmethod
    def get_all_records(self, sid: sheets_id.SheetsIdentifier, worksheet_id: int) -> tuple[Sequence[Mapping[str, str]], Callable[[], None]]:
        """Returns all records for a Google Sheets worksheet."""
        ...
    
    @abc.abstractmethod
    def write_records(self, sid: sheets_id.SheetsIdentifier, rows: Sequence[Sequence[Any]]) -> None:
        """Writes results to a new worksheet to the Google Sheets document."""
        ...
    


class GSpreadClientImpl(GSpreadClient):
    """Concrete implementation of GSpreadClient."""
    def __init__(self, client: Any, env: ipython_env.IPythonEnv | None) -> None:
        """Constructor.

        Args:
          client: Instance of gspread.client.Client.
          env: Optional instance of IPythonEnv. This is used to display messages
            such as the URL of the output Worksheet.
        """
        ...
    
    def validate(self, sid: sheets_id.SheetsIdentifier) -> None:
        ...
    
    def get_all_records(self, sid: sheets_id.SheetsIdentifier, worksheet_id: int) -> tuple[Sequence[Mapping[str, str]], Callable[[], None]]:
        ...
    
    def write_records(self, sid: sheets_id.SheetsIdentifier, rows: Sequence[Sequence[Any]]) -> None:
        ...
    


class NullGSpreadClient(GSpreadClient):
    """Null-object implementation of GSpreadClient.

    This class raises an error if any of its methods are called. It is used when
    the gspread library is not available.
    """
    def validate(self, sid: sheets_id.SheetsIdentifier) -> None:
        ...
    
    def get_all_records(self, sid: sheets_id.SheetsIdentifier, worksheet_id: int) -> tuple[Sequence[Mapping[str, str]], Callable[[], None]]:
        ...
    
    def write_records(self, sid: sheets_id.SheetsIdentifier, rows: Sequence[Sequence[Any]]) -> None:
        ...
    


_gspread_client: GSpreadClient | None = ...
def authorize(creds: credentials.Credentials, env: ipython_env.IPythonEnv | None) -> None:
    """Sets up credential for gspreads."""
    ...

def get_client() -> GSpreadClient:
    ...

def testonly_set_client(client: GSpreadClient) -> None:
    """Overrides the global client for testing."""
    ...

