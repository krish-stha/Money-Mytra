"""
This type stub file was generated by pyright.
"""

import abc
from typing import Any

"""Abstract IPythonEnv base class.

This module provides a layer of abstraction to address the following problems:
1. Sometimes the code needs to run in an environment where IPython is not
available, e.g. inside a unittest.
2. We want to limit dependencies on IPython to code that deals directly with
the notebook environment.
"""
class IPythonEnv(abc.ABC):
    """Abstract base class that provides a wrapper around IPython methods."""
    @abc.abstractmethod
    def display(self, x: Any) -> None:
        """Wrapper around IPython.core.display.display()."""
        ...
    
    @abc.abstractmethod
    def display_html(self, x: str) -> None:
        """Wrapper to display HTML.

        This method is equivalent to calling:
          display.display(display.HTML(x))

        display() and HTML() are combined into a single method because
        display.HTML() returns an object, which would be complicated to model with
        this abstract interface.

        Args:
          x: An HTML string to be displayed.
        """
        ...
    


